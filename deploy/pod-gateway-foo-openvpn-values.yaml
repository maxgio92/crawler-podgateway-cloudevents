# -- Namespaces that might contain routed PODs and therefore
# require a copy of the gneerated settings configmap.
routed_namespaces:
- crawler-system

# -- The webhook is used to mutate the PODs matching the given
# namespace labels. It inserts an init and sidecard helper containers
# that connect to the gateway pod created by this chart.
# @default -- See below
webhook:
  image:
    # -- image tag of the webhook
    tag: v3.8.0

  # -- default behviour for new PODs in the evaluated namespace
  gatewayDefault: false

  # -- label name to check when evaluating POD. If true the POD
  # will get the gateway. If not set setGatewayDefault will apply.
  gatewayLabel:
  gatewayAnnotationValue: foo

settings:
  # -- IPs not sent to the POD gateway but to the default K8S.
  # Multiple CIDRs can be specified using blanks as separator.
  # Example for Calico: ""172.22.0.0/16 172.24.0.0/16"
  #
  # This is needed, for example, in case your CNI does
  # not add a non-default rule for the K8S addresses (Flannel does).
  NOT_ROUTED_TO_GATEWAY_CIDRS: "192.168.0.0/16 10.96.0.0/16"

  # -- Traffic to these IPs will be send through the K8S gateway
  VPN_LOCAL_CIDRS: "192.168.0.0/16 10.96.0.0/16"

  # tun0 for openvpn, wg0 for wireguard
  VPN_INTERFACE: tun0

  # Prevent non VPN traffic to leave the gateway
  VPN_BLOCK_OTHER_TRAFFIC: true

  # If VPN_BLOCK_OTHER_TRAFFIC is true, allow VPN traffic over this port
  VPN_TRAFFIC_PORT: 443

addons:
  vpn:
    enabled: true
    # You might use `openvpn` or `wireguard`
    type: openvpn
    openvpn:
    #  image:
    #    repository: dperson/openvpn-client
    #    tag: latest
    #  authSecret: vpn-auth
    # VPN settings stored in secret `vpnConfig`. The secret mus have a key
    # a key called `vpnConfigfile` with the openvpn/wireguard config files in them
    configFileSecret: openvpn
    #livenessProbe:
    #  exec:
    #    # In the example bellow the VPN output is in Belgic (BE) - change appropiatly
    #    command:
    #      - sh
    #      - -c
    #      - if [ $(wget -q -O- https://ipinfo.io/country) == 'BE' ]; then exit 0; else exit $?; fi
    #  initialDelaySeconds: 30
    #  periodSeconds: 60
    #  failureThreshold: 1
    networkPolicy:
      enabled: true
      egress:
        - to:
          - ipBlock:
              cidr: 0.0.0.0/0
          ports:
          # VPN traffic port - change if your provider uses a different port
          - port: 443
            protocol: UDP
        - to:
            # Allow traffic within K8S - change if your K8S cluster uses a different CIDR
          - ipBlock:
              cidr: 10.96.0.0/16
          - ipBlock:
              cidr: 192.168.0.0/16

